<Window
    x:Class="Liberfy.View.TweetWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Liberfy.View"
    xmlns:etk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:app="clr-namespace:Liberfy"
    xmlns:vm="clr-namespace:Liberfy.ViewModel"
    xmlns:b="clr-namespace:Liberfy.Behaviors"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    mc:Ignorable="d" AllowDrop="True"
    Title="ツイート" Height="329" Width="453"
    FontFamily="Meiryo"
    DataContext="{app:ViewModelConnector vm:TweetWindow}"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    UseLayoutRounding="True">
    <Window.Resources>

        <Duration x:Key="AnimationDuration">0:0:0.5</Duration>
        <CubicEase x:Key="AnimationEase" />

        <Style x:Key="MediaFunctionButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#fff" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="6 2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="#8aaa">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                ContentSource="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#a444" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#a000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="AccountTemplate" DataType="{x:Type app:Account}">
            <Button
                x:Name="border"
                Padding="12"
                BorderBrush="#ddd"
                ClipToBounds="True"
                Background="Transparent"
                BorderThickness="0 0 0 1"
                HorizontalContentAlignment="Left"
                CommandParameter="{Binding Mode=OneTime}"
                Command="{Binding DataContext.SelectAccountCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                <Grid DataContext="{Binding Info, Mode=OneTime}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Image
                        Margin="0 0 8 0" Width="36" Height="36"
                        Source="{Binding ProfileImageUrl, IsAsync=True}" />

                    <app:GeometryIcon
                        Grid.Column="1"
                        Margin="0 4 4 4"
                        Width="18" Height="18"
                        app:ElementBehavior.Visible="{Binding IsProtected, Mode=OneWay}"
                        Data="{StaticResource FontAwesome.Icon.Lock}" />

                    <StackPanel 
                        Grid.Column="2" 
                        VerticalAlignment="Center">
                        <TextBlock Text="{Binding Name, Mode=OneWay}" FontWeight="Bold" />
                        <TextBlock Text="{Binding ScreenName, Mode=OneWay, StringFormat='{}@{0}'}" />
                    </StackPanel>
                </Grid>
            </Button>
        </DataTemplate>

    </Window.Resources>

    <i:Interaction.Behaviors>
        <b:DragDropBehavior
            SetDescription="True"
            UseDescriptionIcon="True"
            Command="{Binding DragDropCommand, Mode=OneTime}"
            AllowEffects="{Binding DragDropEffects, Mode=OneWay}"
            DescriptionIcon="{Binding DropDescriptionIcon, Mode=OneWay}"
            DescriptionMessage="{Binding DropDescriptionMessage, Mode=OneWay}"/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border 
            Panel.ZIndex="100"
            DockPanel.Dock="Top" Style="{StaticResource ToolBarBorderStyle}">
            <DockPanel>
                <StackPanel
                    Margin="2"
                    DockPanel.Dock="Right"
                    Orientation="Horizontal">

                    <Label
                        AllowDrop="True"
                        DockPanel.Dock="Right"
                        VerticalAlignment="Center"
                        Content="{Binding RemainingTweetLength, Mode=OneWay}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanUpdateContent, Mode=OneWay}" Value="false">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <Button
                        AllowDrop="True"
                        DockPanel.Dock="Right"
                        Padding="{StaticResource ToolBarItemPadding}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding AddImageCommand, Mode=OneTime}">
                        <app:GeometryIcon
                            Width="20" Height="20"
                            Data="{StaticResource FontAwesome.Icon.Images}" />
                    </Button>

                    <md:PopupBox StaysOpen="True">
                        <md:PopupBox.ToggleContent>
                            <app:GeometryIcon
                                Margin="4 0"
                                Width="20" Height="20"
                                Data="{StaticResource FontAwesome.Icon.Music}" />
                        </md:PopupBox.ToggleContent>

                        <StackPanel Width="280">
                            <StackPanel Orientation="Horizontal">
                                <app:GeometryIcon
                                    VerticalAlignment="Center"
                                    Width="24" Height="24"
                                    Data="{StaticResource FontAwesome.Icon.Music}" />

                                <TextBlock
                                    Margin="8 0 0 0" Text="NowPlaying"
                                    VerticalAlignment="Center"
                                    FontSize="{StaticResource UIFontSize}" />
                            </StackPanel>

                            <Grid Margin="0 2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>

                                <ComboBox
                                    Margin="0 0 8 0"
                                    SelectedValuePath="Key"
                                    DisplayMemberPath="Value"
                                    VerticalAlignment="Bottom"
                                    FontSize="{StaticResource UIFontSize}"
                                    SelectedValue="{Binding NowPlayingPlayer, Mode=TwoWay}"
                                    ItemsSource="{x:Static vm:TweetWindow.NowPlayingPlayerList}"
                                    md:HintAssist.Hint="プレーヤの選択"
                                    Style="{StaticResource MaterialDesignFloatingHintComboBox}"/>

                                <Button
                                    Grid.Column="1"
                                    Content="取得"
                                    VerticalAlignment="Bottom"
                                    FontSize="{StaticResource UIFontSize}"
                                    Command="{Binding GetNowPlayingTextCommand, Mode=OneTime}"
                                    Style="{StaticResource MaterialDesignRaisedButton}" />
                            </Grid>

                            <TextBox
                                Margin="0 2"
                                TextWrapping="Wrap"
                                AcceptsReturn="True"
                                Grid.ColumnSpan="2"
                                FontSize="{StaticResource UIFontSize}"
                                Text="{Binding InsertionNowPlayingText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                md:HintAssist.Hint="テキスト"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                            <ScrollViewer
                                Margin="0 2"
                                Grid.Row="4"
                                FontSize="{StaticResource UIFontSize}"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Hidden">
                                <ItemsControl
                                    ItemsSource="{Binding NowPlayingArtworks}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type vm:ArtworkItem}">
                                            <CheckBox
                                                Margin="0 0 0 4"
                                                IsChecked="{Binding Use, Mode=TwoWay}">
                                                <Image
                                                    Width="48" Height="48"
                                                    Stretch="UniformToFill"
                                                    RenderOptions.BitmapScalingMode="HighQuality"
                                                    Source="{Binding Image, Mode=OneTime}" />
                                            </CheckBox>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>

                            <Button
                                Margin="0 2"
                                Content="挿入"
                                Padding="24 4"
                                Grid.ColumnSpan="2"
                                HorizontalAlignment="Center"
                                FontSize="{StaticResource UIFontSize}"
                                Command="{Binding InsertNowPlayingTextCommand, Mode=OneTime}"
                                Style="{StaticResource MaterialDesignFlatButton}"/>
                        </StackPanel>
                    </md:PopupBox>

                    <Button
                        AllowDrop="True"
                        DockPanel.Dock="Right"
                        Content="ツイート"
                        Padding="{StaticResource ToolBarItemPadding}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding PostCommand, Mode=OneTime}" />
                </StackPanel>

                <md:PopupBox
                    Margin="2"
                    ClipToBounds="True">
                    <md:PopupBox.ToggleContent>
                        <StackPanel
                            Margin="8 0"
                            Orientation="Horizontal"
                            DataContext="{Binding SelectedAccount, Mode=OneWay}">
                            <Image
                                Width="28" Height="28"
                                Source="{Binding Info.ProfileImageUrl, IsAsync=True, Mode=OneWay}" />

                            <app:GeometryIcon
                                Margin="2 2 0 2"
                                Width="16" Height="16"
                                app:ElementBehavior.Visible="{Binding Info.IsProtected, Mode=OneWay}"
                                Data="{StaticResource FontAwesome.Icon.Lock}" />

                            <TextBlock
                                Margin="4 2 0 2"
                                TextWrapping="NoWrap"
                                VerticalAlignment="Center"
                                TextTrimming="CharacterEllipsis"
                                Text="{Binding Info.ScreenName, Mode=OneWay, StringFormat='{}@{0}'}" />
                        </StackPanel>
                    </md:PopupBox.ToggleContent>

                    <ItemsControl
                        Width="260" FontSize="{StaticResource UIFontSize}"
                        ItemsSource="{Binding Accounts, Mode=OneTime}"
                        ItemTemplate="{StaticResource AccountTemplate}"/>
                </md:PopupBox>
                
                <Border Margin="2" />
            </DockPanel>
        </Border>

        <Border 
            Panel.ZIndex="1"
            x:Name="MediaPanel"
            Grid.Row="1"
            Background="#eee"
            BorderBrush="#ccc"
            BorderThickness="0 0 0 1"
            app:ElementBehavior.Visible="{Binding Media.HasItems, Mode=OneWay}">
            <DockPanel>
                <CheckBox
                    DockPanel.Dock="Top" Margin="8 6"
                    IsChecked="{Binding IsSensitiveMedia, Mode=TwoWay}"
                    Content="不適切な表現を含む画像であることを告示する"/>

                <ListBox
                    Padding="0"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
                    VirtualizingPanel.ScrollUnit="Pixel"
                    ScrollViewer.CanContentScroll="False"
                    ItemsSource="{Binding Media, Mode=OneTime}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:UploadMedia}">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Image 
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Stretch="UniformToFill"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Source="{Binding PreviewImage, Mode=OneTime}" />

                                <Label
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Foreground="#fff"
                                    Background="#8aaa"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Padding="4 2" FontWeight="Bold"
                                    Content="{Binding ViewExtension, Mode=OneTime}"/>

                                <ProgressBar
                                    x:Name="progressBar"
                                    Visibility="Collapsed"
                                    Height="7"
                                    Minimum="0.0"
                                    Maximum="1.0"
                                    Value="{Binding UploadProgress, Mode=OneWay}"
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    app:ElementBehavior.Visible="{Binding UseChunkedUpload, Mode=OneWay}"/>

                                <Button
                                    x:Name="removeButton"
                                    Grid.Row="1"
                                    Padding="4 2"
                                    Content="削除"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    Command="{Binding DataContext.RemoveMediaCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource MediaFunctionButtonStyle}"/>

                                <Border
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Background="#B000"
                                    app:ElementBehavior.Visible="{Binding IsUploading, Mode=OneWay}">
                                    <TextBlock
                                        Margin="4"
                                        FontSize="12"
                                        Foreground="#fff"
                                        TextWrapping="Wrap"
                                        TextTrimming="None"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="アップロード中..." />
                                </Border>
                            </Grid>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsTweetPosting, Mode=OneWay}" Value="true">
                                    <Setter TargetName="removeButton" Property="Visibility" Value="{x:Static Visibility.Collapsed}" />
                                    <Setter TargetName="progressBar" Property="Visibility" Value="{x:Static Visibility.Visible}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border
                                            x:Name="border"
                                            Margin="6"
                                            Width="100" Height="75"
                                            BorderThickness="1"
                                            BorderBrush="#bbb">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="5"
                                                    Direction="315" 
                                                    ShadowDepth="1"
                                                    Opacity="0.5" />
                                            </Border.Effect>
                                            <ContentPresenter
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="border" Property="BorderBrush" Value="#aaa" />
                                            </Trigger>

                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </DockPanel>
        </Border>

        <TextBox
            Padding="4"
            TabIndex="0"
            AllowDrop="True"
            IsTabStop="False"
            BorderThickness="0"
            TextWrapping="Wrap"
            AcceptsReturn="True"
            Grid.Row="2"
            Text="{Binding Tweet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsReadOnly="{Binding IsEditable, Mode=OneWay, Converter={StaticResource BoolInverter}}">
            <i:Interaction.Behaviors>
                <b:TextBoxBehavior Controller="{Binding TextBoxController, Mode=OneTime}" />
                <b:PasteImageBehavior Command="{Binding PasteImageCommand, Mode=OneTime}" />
                <b:DragDropBehavior
                    SetDescription="True"
                    UseDescriptionIcon="True"
                    Command="{Binding DragDropCommand, Mode=OneTime}"
                    AllowEffects="{Binding DragDropEffects, Mode=OneWay}"
                    DescriptionIcon="{Binding DropDescriptionIcon, Mode=OneWay}"
                    DescriptionMessage="{Binding DropDescriptionMessage, Mode=OneWay}"/>
            </i:Interaction.Behaviors>
        </TextBox>

        <Border
            Grid.Row="2"
            Background="#A000"
            app:ElementBehavior.Visible="{Binding IsTweetPosting, Mode=OneWay}">
            <TextBlock 
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                FontSize="18"
                Foreground="White"
                TextTrimming="None"
                TextWrapping="Wrap"
                TextAlignment="Center"
                Text="{Binding UploadStatusText, Mode=OneWay}">
                <TextBlock.Effect>
                    <DropShadowEffect
                        BlurRadius="5"
                        ShadowDepth="1"
                        Direction="270" />
                </TextBlock.Effect>
            </TextBlock>
        </Border>
    </Grid>
</Window>
