<Window
    x:Class="Liberfy.View.TweetWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Liberfy.View"
    xmlns:app="clr-namespace:Liberfy"
    xmlns:vm="clr-namespace:Liberfy.ViewModel"
    xmlns:b="clr-namespace:Liberfy.Behaviors"
    mc:Ignorable="d" AllowDrop="True"
    Title="ツイート" Height="329" Width="453"
    FontFamily="Meiryo"
    DataContext="{app:ViewModelConnector vm:TweetWindow}"
    d:DataContext="{d:DesignInstance {x:Type vm:TweetWindow}, IsDesignTimeCreatable=True}"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    UseLayoutRounding="True">
    <Window.Resources>

        <Duration x:Key="AnimationDuration">0:0:0.5</Duration>
        <CubicEase x:Key="AnimationEase" />

        <Style x:Key="MediaFunctionButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#fff" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="6 2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="#8aaa">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                ContentSource="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#a444" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#a000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <i:Interaction.Behaviors>
        <b:DragDropBehavior
            SetDescription="True"
            UseDescriptionIcon="True"
            Command="{Binding DragDropCommand, Mode=OneTime}"
            AllowEffects="{Binding DragDropEffects, Mode=OneWay}"
            DescriptionIcon="{Binding DropDescriptionIcon, Mode=OneWay}"
            DescriptionMessage="{Binding DropDescriptionMessage, Mode=OneWay}"/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="147*"/>
            <ColumnDefinition Width="299*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <Border 
            Panel.ZIndex="100" Style="{StaticResource ToolBarBorderStyle}"
            Grid.ColumnSpan="2">
            <DockPanel>
                <StackPanel
                    Margin="2"
                    DockPanel.Dock="Right"
                    Orientation="Horizontal">

                    <Label
                        Margin="0 0 4 0"
                        AllowDrop="True"
                        DockPanel.Dock="Right"
                        VerticalAlignment="Center"
                        Content="{Binding TextLength, Mode=OneWay}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanPostContent, Mode=OneWay}" Value="false">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ToggleButton
                        VerticalAlignment="Stretch"
                        IsChecked="{Binding PostParameters.HasSpoilerText, Mode=TwoWay}"
                        Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                        app:ElementBehavior.Visible="{Binding ServiceConfiguration.HasSpoilerText, Mode=OneWay}">
                        CW
                    </ToggleButton>

                    <Button
                        VerticalAlignment="Stretch"
                        Padding="{StaticResource ToolBarItemPadding}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding AddImageCommand, Mode=OneTime}">
                        <app:GeometryIcon
                            Width="18" Height="18"
                            Data="{StaticResource FontAwesome.Icon.Images}" />
                    </Button>

                    <app:DropDownButton
                        VerticalAlignment="Stretch"
                        PopupOffset="-5, 0"
                        Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                        <app:GeometryIcon
                            Margin="4 0"
                            Width="18" Height="18"
                            Data="{StaticResource FontAwesome.Icon.Music}" />
                        <app:DropDownButton.PopupContent>
                            <app:PopupDecorator>
                                <StackPanel>
                                    <MenuItem
                                        Header="Media Player"
                                        Command="{Binding NowPlayingCommand, Mode=OneTime}"
                                        CommandParameter="wmplayer" />
                                    <MenuItem
                                        Header="iTunes"
                                        Command="{Binding NowPlayingCommand, Mode=OneTime}"
                                        CommandParameter="itunes" />
                                    <MenuItem
                                        Header="foobar2000"
                                        Command="{Binding NowPlayingCommand, Mode=OneTime}"
                                        CommandParameter="foobar2000" />

                                    <Separator />
                                    <MenuItem Header="NowPlayingの設定(_D)" />
                                </StackPanel>
                            </app:PopupDecorator>
                        </app:DropDownButton.PopupContent>
                    </app:DropDownButton>

                    <Button
                        DockPanel.Dock="Right"
                        Content="ツイート"
                        Padding="{StaticResource ToolBarItemPadding}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding PostCommand, Mode=OneTime}"
                        CommandParameter="{Binding SelectedAccount, Mode=OneWay}" />
                </StackPanel>

                <app:DropDownButton
                    Margin="2" Padding="2, 0"
                    PopupOffset="-5, 0"
                    Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                    <StackPanel
                        Margin="2, 0"
                        Orientation="Horizontal"
                        DataContext="{Binding SelectedAccount, Mode=OneWay}">
                        <Image
                            Width="32" Height="32"
                            Source="{Binding Info.ProfileImageUrl, IsAsync=True, Mode=OneWay}"
                            RenderOptions.BitmapScalingMode="HighQuality" />

                        <app:GeometryIcon
                            Margin="2, 2, 0, 2"
                            Width="16" Height="16"
                            app:ElementBehavior.Visible="{Binding Info.IsProtected, Mode=OneWay}"
                            Data="{StaticResource FontAwesome.Icon.Lock}" />

                        <TextBlock
                            Margin="4, 2, 0, 2"
                            TextWrapping="NoWrap"
                            VerticalAlignment="Center"
                            TextTrimming="CharacterEllipsis"
                            Text="{Binding Info.ScreenName, Mode=OneWay, StringFormat='{}@{0}'}" />

                        <app:GeometryIcon
                            Grid.Column="2"
                            Margin="4 0 2 0" Width="10"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Data="{StaticResource FontAwesome.Icon.ChevronDown}" />

                    </StackPanel>
                    <app:DropDownButton.PopupContent>
                        <app:PopupDecorator Width="240">
                            <ListBox
                                SelectedItem="{Binding SelectedAccount, Mode=TwoWay}"
                                ItemsSource="{Binding Accounts, Mode=OneTime}"
                                ItemTemplate="{StaticResource AccountItemTemplate}" />
                        </app:PopupDecorator>
                    </app:DropDownButton.PopupContent>
                </app:DropDownButton>

                <Border Margin="2" />
            </DockPanel>
        </Border>

        <Border 
            Panel.ZIndex="1"
            x:Name="MediaPanel"
            Grid.Row="1"
            Background="#eee"
            BorderBrush="#ccc"
            BorderThickness="0 0 0 1"
            app:ElementBehavior.Visible="{Binding PostParameters.Attachments.HasItems, Mode=OneWay}" Grid.ColumnSpan="2">
            <DockPanel>
                <CheckBox
                    DockPanel.Dock="Top" Margin="8 6"
                    IsChecked="{Binding PostParameters.IsContainsWarningAttachment, Mode=TwoWay}"
                    Content="閲覧注意コンテンツを含む"/>

                <ListBox
                    Padding="0"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
                    VirtualizingPanel.ScrollUnit="Pixel"
                    ScrollViewer.CanContentScroll="False"
                    ItemsSource="{Binding PostParameters.Attachments, Mode=OneTime}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:UploadMedia}">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Image 
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Stretch="UniformToFill"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Source="{Binding PreviewImage, Mode=OneTime}" />

                                <Label
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Foreground="#fff"
                                    Background="#8aaa"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Padding="4 2" FontWeight="Bold"
                                    Content="{Binding ViewExtension, Mode=OneTime}"/>

                                <ProgressBar
                                    x:Name="progressBar"
                                    Visibility="Collapsed"
                                    Height="7"
                                    Minimum="0.0"
                                    Maximum="1.0"
                                    Value="{Binding UploadProgress, Mode=OneWay}"
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    app:ElementBehavior.Visible="{Binding UseChunkedUpload, Mode=OneWay}"/>

                                <Button
                                    x:Name="removeButton"
                                    Grid.Row="1"
                                    Padding="4 2"
                                    Content="削除"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    CommandParameter="{Binding Mode=OneTime}"
                                    Command="{Binding DataContext.RemoveMediaCommand, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                    Style="{StaticResource MediaFunctionButtonStyle}"/>

                                <Border
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Background="#B000"
                                    app:ElementBehavior.Visible="{Binding IsUploading, Mode=OneWay}">
                                    <TextBlock
                                        Margin="4"
                                        FontSize="12"
                                        Foreground="#fff"
                                        TextWrapping="Wrap"
                                        TextTrimming="None"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="アップロード中..." />
                                </Border>
                            </Grid>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsTweetPosting, Mode=OneWay}" Value="true">
                                    <Setter TargetName="removeButton" Property="Visibility" Value="{x:Static Visibility.Collapsed}" />
                                    <Setter TargetName="progressBar" Property="Visibility" Value="{x:Static Visibility.Visible}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border
                                            x:Name="border"
                                            Margin="6"
                                            Width="100" Height="75"
                                            BorderThickness="1"
                                            BorderBrush="#bbb">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="5"
                                                    Direction="315" 
                                                    ShadowDepth="1"
                                                    Opacity="0.5" />
                                            </Border.Effect>
                                            <ContentPresenter
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="border" Property="BorderBrush" Value="#aaa" />
                                            </Trigger>

                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </DockPanel>
        </Border>

        <Border
            Grid.Row="2"
            Grid.ColumnSpan="2"
            BorderThickness="0, 0, 0, 1"
            app:ElementBehavior.Visible="{Binding IsShowSpoilerText, Mode=OneWay}"
            BorderBrush="{StaticResource ToolBar.Static.BorderBrush}">
            <TextBox
                Padding="4, 8"
                Margin="0, 0, 0, 1"
                TabIndex="0"
                ClipToBounds="True"
                BorderThickness="0"
                TextWrapping="NoWrap"
                AcceptsReturn="False"
                Text="{Binding PostParameters.SpoilerText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsReadOnly="{Binding IsBusy, Mode=OneWay}">
                <i:Interaction.Behaviors>
                    <b:TextBoxBehavior Controller="{Binding TextBoxController, Mode=OneTime}" />
                    <b:PasteImageBehavior Command="{Binding PasteImageCommand, Mode=OneTime}" />
                    <b:DragDropBehavior
                        SetDescription="True"
                        UseDescriptionIcon="True"
                        Command="{Binding DragDropCommand, Mode=OneTime}"
                        AllowEffects="{Binding DragDropEffects, Mode=OneWay}"
                        DescriptionIcon="{Binding DropDescriptionIcon, Mode=OneWay}"
                        DescriptionMessage="{Binding DropDescriptionMessage, Mode=OneWay}"/>
                </i:Interaction.Behaviors>
            </TextBox>
        </Border>

        <TextBox
            Grid.ColumnSpan="2"
            Padding="4"
            TabIndex="1"
            ClipToBounds="True"
            AllowDrop="True"
            IsTabStop="False"
            BorderThickness="0"
            TextWrapping="Wrap"
            AcceptsReturn="True"
            Grid.Row="3"
            Text="{Binding PostParameters.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsReadOnly="{Binding IsBusy, Mode=OneWay}">
            <i:Interaction.Behaviors>
                <b:TextBoxBehavior Controller="{Binding TextBoxController, Mode=OneTime}" />
                <b:PasteImageBehavior Command="{Binding PasteImageCommand, Mode=OneTime}" />
                <b:DragDropBehavior
                    SetDescription="True"
                    UseDescriptionIcon="True"
                    Command="{Binding DragDropCommand, Mode=OneTime}"
                    AllowEffects="{Binding DragDropEffects, Mode=OneWay}"
                    DescriptionIcon="{Binding DropDescriptionIcon, Mode=OneWay}"
                    DescriptionMessage="{Binding DropDescriptionMessage, Mode=OneWay}"/>
            </i:Interaction.Behaviors>
        </TextBox>

        <Border
            Grid.Row="2"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Background="#A000"
            app:ElementBehavior.Visible="{Binding IsUploading, Mode=OneWay}">
            <TextBlock 
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                FontSize="18"
                Foreground="White"
                TextTrimming="None"
                TextWrapping="Wrap"
                TextAlignment="Center"
                Text="{Binding UploadStatusText, Mode=OneWay}">
                <TextBlock.Effect>
                    <DropShadowEffect
                        BlurRadius="5"
                        ShadowDepth="1"
                        Direction="270" />
                </TextBlock.Effect>
            </TextBlock>
        </Border>
    </Grid>
</Window>
