<Window
	x:Class="Liberfy.SettingWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:Liberfy"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	ResizeMode="NoResize"
	UseLayoutRounding="True"
	TextOptions.TextFormattingMode="Display"
	Title="設定" Height="434" Width="730">
	<Window.Resources>
		<local:SettingWindowViewModel x:Key="ViewModel" />
		<sys:Double x:Key="tabItemWidth">120</sys:Double>

		<Thickness x:Key="ContainerMargin">6</Thickness>

		<Style x:Key="ElementsContainerStyle" TargetType="{x:Type Panel}">
			<Setter Property="Margin" Value="{StaticResource ContainerMargin}" />
			<Style.Resources>
				<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
					<Setter Property="Margin" Value="4 2" />
				</Style>

				<Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
					<Setter Property="Padding" Value="4 0 4 6" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
				</Style>
			</Style.Resources>
		</Style>
		
		<!--#region TabControl Template-->
		<Style x:Key="tabItemStyle" TargetType="{x:Type TabItem}">
			<Setter Property="Padding" Value="14 8" />
			<Setter Property="Background" Value="{x:Static Brushes.Transparent}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border
							x:Name="border"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderThickness="0 0 0 1"
							BorderBrush="{DynamicResource SettingTabItemNormalBorderBrush}">
							<ContentPresenter 
								ContentSource="Header"
								TextBlock.Foreground="{DynamicResource SettingTabItemForeground}"/>
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="#2fff" />
							</Trigger>

							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="border" Property="Background" Value="#dfff" />
								<Setter Property="Foreground" Value="{DynamicResource TabPanelBackground}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SettingTabItemSelectedBorderBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="tabControlStyle" TargetType="{x:Type TabControl}">
			<Setter Property="TabStripPlacement" Value="Left" />
			<Setter Property="Background" Value="#fcfcfc" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<Border
								BorderThickness="0 0 1 0"
								Background="{DynamicResource SettingTabPanelBackground}"
								BorderBrush="{DynamicResource SettingTabItemNormalBorderBrush}" />

							<TabPanel
								x:Name="HeaderPanel"
								IsItemsHost="True"
								KeyboardNavigation.TabIndex="1"
								Width="{StaticResource tabItemWidth}"
								Background="{x:Static Brushes.Transparent}" />

							<Border 
								Grid.Column="1"
								Background="{TemplateBinding Background}">
								<ContentPresenter 
									x:Name="PART_SelectedContentHost" 
									ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemContainerStyle" Value="{StaticResource tabItemStyle}" />
		</Style>
		<!--#endregion-->
	</Window.Resources>
	<Window.DataContext>
		<local:ViewModelInstance ViewModel="{StaticResource ViewModel}" />
	</Window.DataContext>
	<DockPanel>
		<Border 
			Height="32" DockPanel.Dock="Top"
			Style="{StaticResource ToolBarBorderStyle}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="120" />
					<ColumnDefinition />
					<ColumnDefinition Width="auto" />
				</Grid.ColumnDefinitions>

				<TextBlock
					Text="設定"
					FontWeight="Bold"
					VerticalAlignment="Center"
					HorizontalAlignment="Center" />

				<Border 
					Width="1"
					Background="{DynamicResource ToolBarBorderBrush}"
					HorizontalAlignment="Right"
					VerticalAlignment="Stretch" />

				<TextBlock
					Grid.Column="1"
					FontWeight="Bold"
					VerticalAlignment="Center"
					HorizontalAlignment="Center"
					Text="{Binding ElementName=tabControl, Path=SelectedItem.Header}" />

				<ToolBar
					Grid.Column="3"
					ToolBarTray.IsLocked="True"
					local:ElementBehavior.Visible="{Binding IsAccountPage, Mode=OneWay}">
					<Button 
						Content="アカウントの追加"
						Command="{Binding AddAccountCommand, Mode=OneTime}"/>
					<Button 
						Content="削除"
						Command="{Binding DeleteAccountCommand, Mode=OneTime}"/>
					<Button 
						Content="上に移動"
						Command="{Binding AccountMoveUpCommand, Mode=OneTime}"/>
					<Button 
						Content="下に移動"
						Command="{Binding AccountMoveDownCommand, Mode=OneTime}"/>
					<Button ToolBar.OverflowMode="Always" Content="拡張認証" />
				</ToolBar>
			</Grid>
		</Border>

		<TabControl 
			x:Name="tabControl" 
			Style="{StaticResource tabControlStyle}"
			SelectedIndex="{Binding TabPageIndex, Mode=TwoWay}">
			<TabItem Header="基本設定">
				<StackPanel Style="{StaticResource ElementsContainerStyle}">
					<CheckBox Content="起動時にアップデートを確認する"
							  IsChecked="{Binding Setting.CheckUpdate}"/>
					<Label Content="アプリケーションの起動時にアップデートの確認を行います。" />
					
					<CheckBox Content="ログオン時に自動的に起動する"
							  IsChecked="{Binding AutoStartup}"/>
					<Label Content="ユーザーアカウントのログオン時にアプリケーションを自動的に起動します" />
					
					<CheckBox Content="ウィンドウを最小化して起動する"
							  IsChecked="{Binding Setting.MinimizeStartup}"/>
					<Label Content="アプリケーション起動時にウィンドウを最小化します" />
					
					<CheckBox Content="タスクトレイに常駐する"
							  IsChecked="{Binding Setting.StayingInTaskTray}"/>
					<Label Content="アプリケーションを終了せずに最小化します" />
					
					<CheckBox Content="最小化時にバルーンを表示する" />
					<Label Content="タスクトレイに格納された場合に起動中である旨のメッセージをバルーンで表示します" />
					
					<CheckBox Content="最小化時にタスクバーに表示する"
							  IsChecked="{Binding Setting.AlwaysShowInTaskbar}"/>
					<Label Content="タスクトレイ常駐時もアプリケーションアイコンをタスクバーに表示します" />
					
					<CheckBox Content="ログオフを抑止する"
							  IsChecked="{Binding Setting.SuppressShutdown}"/>
					<Label Content="シャットダウンまたはログオフ（セッション終了要求）をキャンセルします" />
				</StackPanel>
			</TabItem>

			<TabItem Header="アカウント">
				<ListView
					BorderThickness="0"
					Background="Transparent"
					SelectedIndex="{Binding SelectedAccountIndex}"
					ItemsSource="{Binding Accounts, Mode=OneTime}"
					ItemContainerStyle="{StaticResource AccountListItemTemplate}"
					ItemTemplate="{StaticResource AccountItemTemplate}">
				</ListView>
			</TabItem>

			<TabItem Header="通知">

			</TabItem>

			<TabItem Header="タイムライン"></TabItem>

			<TabItem Header="ミュート" />

			<TabItem Header="書式" />
		</TabControl>
	</DockPanel>
</Window>
