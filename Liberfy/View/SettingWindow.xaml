<Window
	x:Class="Liberfy.SettingWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:Liberfy"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:b="clr-namespace:Liberfy.Behaviors"
	xmlns:conv="clr-namespace:Liberfy.Converter"
	xmlns:vm="clr-namespace:Liberfy.ViewModel"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	mc:Ignorable="d"
	ResizeMode="NoResize"
	UseLayoutRounding="True"
	TextOptions.TextFormattingMode="Display"
	Title="設定" Height="494" Width="712"
	FontFamily="Meiryo"
	DataContext="{local:ViewModelConnector {x:Type vm:SettingWindow}}">
	<Window.Resources>
		<sys:Double x:Key="tabItemWidth">120</sys:Double>

		<conv:ColumnNameConverter x:Key="ColumnNameConverter" />
		<conv:ListBoxIndexConverter x:Key="ListBoxIndexConverter" />
		<conv:ColumnSettingToColumnConverter x:Key="ColumnSettingToColumnConverter" />

		<Style x:Key="HeaderLabel" TargetType="{x:Type Label}">
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Foreground" Value="#333" />
		</Style>

		<conv:LocalizeNameConverter
			x:Key="MuteTypeNameConverter"
			LocalizeDictionary="{x:Static local:UILocalize.MuteTypes}" />

		<conv:LocalizeNameConverter
			x:Key="MuteSearchTypeNameConverter"
			LocalizeDictionary="{x:Static local:UILocalize.MuteMatchTypes}" />

		<!--<conv:LocalizeNameConverter
			x:Key=""-->

		<Style x:Key="HeaderLabelStyle2" TargetType="{x:Type Label}" BasedOn="{StaticResource HeaderLabel}">
			<Setter Property="Margin" Value="0 8 0 0" />
		</Style>

		<Thickness x:Key="ContainerMargin">12</Thickness>

		<Style x:Key="ElementsContainerStyle" TargetType="{x:Type Panel}">
			<Setter Property="Margin" Value="{StaticResource ContainerMargin}" />
			<Style.Resources>
				<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
					<Setter Property="Margin" Value="4 3" />
					<Setter Property="HorizontalAlignment" Value="Left" />
				</Style>

				<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
					<Setter Property="Margin" Value="4 3" />
					<Setter Property="HorizontalAlignment" Value="Left" />
				</Style>

				<Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
					<Setter Property="Padding" Value="4 0 4 6" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
				</Style>
			</Style.Resources>
		</Style>

		<DataTemplate x:Key="AccountTemplate" DataType="{x:Type local:Account}">
			<Border
				x:Name="border"
				Padding="12"
				ClipToBounds="True"
				BorderThickness="0 0 0 1"
				Background="Transparent"
				BorderBrush="#ddd"
				d:DesignWidth="360">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto" />
						<ColumnDefinition Width="auto" />
						<ColumnDefinition />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>

					<Image
						Margin="0 0 8 0" Width="36" Height="36"
						Source="{Binding Info.ProfileImageUrl, IsAsync=True}" />

					<TextBlock
						Grid.Column="1"
						Margin="0 4 4 4"
						Text="&#xf023;" FontSize="18"
						Style="{StaticResource ToolBarIconText}"
						local:ElementBehavior.Visible="{Binding Info.IsProtected, Mode=OneWay}" />
					
					<StackPanel 
						Grid.Column="2" 
						VerticalAlignment="Center">
						<TextBlock Text="{Binding Info.Name, Mode=OneWay}" FontWeight="Bold" />
						<TextBlock Text="{Binding Info.ScreenName, Mode=OneWay, StringFormat='{}@{0}'}" />
					</StackPanel>

					<StackPanel
						Grid.Column="3"
						Opacity="0.6"
						x:Name="accountFuncPanel"
						Orientation="Horizontal"
						VerticalAlignment="Center">
						<Button
							Margin="0 0 4 0"
							Content="▲"
							CommandParameter="{Binding}"
							Command="{Binding DataContext.AccountMoveUpCommand, Mode=OneTime, 
								RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=1}}"
							Style="{StaticResource SimpleButtonStyle}" />

						<Button
							Margin="0 0 4 0"
							Content="▼"
							CommandParameter="{Binding}"
							Command="{Binding DataContext.AccountMoveDownCommand, Mode=OneTime,
								RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=1}}"
							Style="{StaticResource SimpleButtonStyle}" />

						<Button
							Content="削除"
							CommandParameter="{Binding}"
							Command="{Binding DataContext.AccountDeleteCommand, Mode=OneTime,
								RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=1}}"
							Background="Red"
							Style="{StaticResource SimpleButtonStyle}" />
					</StackPanel>
				</Grid>
			</Border>

			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true">
					<Setter TargetName="accountFuncPanel" Property="Opacity" Value="1.0" />
					<Setter TargetName="border" Property="Background" Value="#eee" />
					<Setter TargetName="border" Property="BorderBrush" Value="#ccc" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>


		<!--#region TabControl Template-->
		<Style x:Key="tabItemStyle" TargetType="{x:Type TabItem}">
			<Setter Property="Padding" Value="14 8" />
			<Setter Property="Background" Value="{x:Static Brushes.Transparent}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border
							x:Name="border"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderThickness="0 0 0 1"
							BorderBrush="{DynamicResource SettingTabItemNormalBorderBrush}">
							<ContentPresenter 
								ContentSource="Header"
								TextBlock.Foreground="{DynamicResource SettingTabItemForeground}"/>
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="#2fff" />
							</Trigger>

							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="border" Property="Background" Value="#dfff" />
								<Setter Property="Foreground" Value="{DynamicResource SettingTabPanelBackground}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SettingTabItemSelectedBorderBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="tabControlStyle" TargetType="{x:Type TabControl}">
			<Setter Property="TabStripPlacement" Value="Left" />
			<Setter Property="Background" Value="#fcfcfc" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<Border
								BorderThickness="0 0 1 0"
								Background="{DynamicResource SettingTabPanelBackground}"
								BorderBrush="{DynamicResource SettingTabItemNormalBorderBrush}" />

							<TabPanel
								x:Name="HeaderPanel"
								IsItemsHost="True"
								KeyboardNavigation.TabIndex="1"
								Width="{StaticResource tabItemWidth}"
								Background="{x:Static Brushes.Transparent}" />

							<Border 
								Grid.Column="1"
								Background="{TemplateBinding Background}">
								<ContentPresenter 
									x:Name="PART_SelectedContentHost" 
									ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemContainerStyle" Value="{StaticResource tabItemStyle}" />
		</Style>

		<Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
			<Setter Property="TabStripPlacement" Value="Top" />
			<Setter Property="Background" Value="White" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="auto" />
								<RowDefinition />
							</Grid.RowDefinitions>

							<Border
								BorderThickness="0 0 0 1"
								Background="{DynamicResource SettingTabPanelBackground}"
								BorderBrush="{DynamicResource SettingTabItemNormalBorderBrush}" />

							<TabPanel
								x:Name="HeaderPanel"
								Margin="4 4 4 0"
								IsItemsHost="True"
								KeyboardNavigation.TabIndex="1"
								Background="{x:Static Brushes.Transparent}" />

							<Border 
								Grid.Row="1"
								Background="{TemplateBinding Background}">
								<ContentPresenter 
									x:Name="PART_SelectedContentHost" 
									ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemContainerStyle">
				<Setter.Value>
					<Style TargetType="{x:Type TabItem}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TabItem}">
									<Border 
										x:Name="border"
										Padding="12 6"
										BorderThickness="1 1 1 1"
										Margin="0 0 -1 0"
										Background="#f4f4f4"
										BorderBrush="#ccc">
										<ContentPresenter ContentSource="Header" />
									</Border>

									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter TargetName="border" Property="Background" Value="#fafafa" />
											<Setter TargetName="border" Property="BorderBrush" Value="#aaa" />
										</Trigger>

										<Trigger Property="IsSelected" Value="true">
											<Setter TargetName="border" Property="BorderThickness" Value="1 1 1 0" />
											<Setter TargetName="border" Property="Background" Value="#fff" />
											<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SettingTabItemNormalBorderBrush}" />
										</Trigger>

										<Trigger Property="IsSelected" Value="false">
											<Setter Property="Foreground" Value="#666" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<conv:LocalFontNameConverter x:Key="LocalFontNameConverter" />

		<DataTemplate x:Key="FontViewTemplate" DataType="{x:Type FontFamily}">
			<Grid Margin="4">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>

				<TextBlock
					FontSize="16"
					Text="{Binding Converter={StaticResource LocalFontNameConverter}, Mode=OneTime}"
					FontFamily="{Binding Mode=OneTime}" />

				<TextBlock
					Grid.Row="1" Margin="0 3 0 0"
					Foreground="{DynamicResource DisabledForeground}">
					<Run Text="{Binding Converter={StaticResource LocalFontNameConverter}, Mode=OneTime}" />
					<Run />/ <Run Text="{Binding Source, Mode=OneWay}"/>
				</TextBlock>
			</Grid>
		</DataTemplate>
	</Window.Resources>
	<DockPanel>
		<Border
			Height="32" DockPanel.Dock="Top"
			Style="{StaticResource ToolBarBorderStyle}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="120" />
					<ColumnDefinition />
					<ColumnDefinition Width="auto" />
				</Grid.ColumnDefinitions>

				<TextBlock
					Text="設定"
					FontWeight="Bold"
					VerticalAlignment="Center"
					HorizontalAlignment="Center" />

				<Border 
					Width="1"
					Background="{DynamicResource ToolBarBorderBrush}"
					HorizontalAlignment="Right"
					VerticalAlignment="Stretch" />

				<TextBlock
					Grid.Column="1"
					FontWeight="Bold"
					VerticalAlignment="Center"
					HorizontalAlignment="Center"
					Text="{Binding ElementName=tabControl, Path=SelectedItem.Header}" />
			</Grid>
		</Border>

		<TabControl 
			x:Name="tabControl"
			Style="{StaticResource tabControlStyle}"
			SelectedIndex="{Binding TabPageIndex, Mode=TwoWay}">
			<TabItem Header="アカウント">
				<TabControl Style="{StaticResource TabControlStyle1}">
					<TabItem Header="アカウント管理">
						<DockPanel>
							<ToolBar
								DockPanel.Dock="Top"
								Style="{StaticResource ToolBarStyle}">
								<Button 
									Content="アカウントの追加"
									Command="{Binding AccountAddCommand, Mode=OneTime}"/>
							</ToolBar>

							<ScrollViewer VerticalScrollBarVisibility="Auto">
								<ItemsControl 
									ItemsSource="{Binding Accounts, Mode=OneTime}"
									ItemTemplate="{StaticResource AccountTemplate}"/>
							</ScrollViewer>
						</DockPanel>
					</TabItem>
					<TabItem Header="アカウントの初期設定">
						<DockPanel>
							<UniformGrid
								Columns="2" Margin="4"
								DockPanel.Dock="Top"
								Style="{StaticResource ElementsContainerStyle}">

								<CheckBox
									Content="起動時に自動的にログインする"
									IsChecked="{Binding Setting.AccountDefaultAutomaticallyLogin, Mode=TwoWay}" />
							</UniformGrid>

							<Separator
								DockPanel.Dock="Top"
								Background="#ccc"
								Margin="0"/>
							
							<ListBox
								Margin="0"
								DockPanel.Dock="Left"
								Width="260"
								BorderThickness="0 0 1 0"
								BorderBrush="#ccc"
								ItemsSource="{Binding DefaultColumns, Mode=OneTime}"
								SelectedItem="{Binding SelectedColumnSetting, Mode=TwoWay}">
								<ListBox.ItemTemplate>
									<DataTemplate DataType="{x:Type local:ColumnSetting}">
										<TextBlock
											Margin="8"
											Text="{Binding Type, Mode=OneTime, Converter={StaticResource ColumnNameConverter}}" />
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>

							<ToolBar
								DockPanel.Dock="Top"
								Grid.Row="1"
								Style="{StaticResource ToolBarStyle}">

								<xctk:DropDownButton
									Content="カラムの追加"
									Padding="12 3"
									Style="{StaticResource ToolBarDropDownButton}">
									<xctk:DropDownButton.DropDownContent>
										<ScrollViewer
											VerticalScrollBarVisibility="Auto">
											<ItemsControl ItemsSource="{x:Static local:ColumnBase.ColumnTypes}">
												<ItemsControl.ItemTemplate>
													<DataTemplate>
														<Button
															Padding="12 4"
															BorderThickness="0"
															HorizontalContentAlignment="Left"
															Content="{Binding Value, Mode=OneTime}"
															CommandParameter="{Binding Key, Mode=OneTime}"
															Style="{DynamicResource {x:Static ToolBar.ButtonStyleKey}}"
															Command="{Binding DataContext.ColumnAddCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
													</DataTemplate>
												</ItemsControl.ItemTemplate>
											</ItemsControl>
										</ScrollViewer>
									</xctk:DropDownButton.DropDownContent>
								</xctk:DropDownButton>

								<Separator />

								<Button
									Content="削除"
									Command="{Binding ColumnRemoveCommand, Mode=OneTime}"
									CommandParameter="{Binding SelectedColumnSetting, Mode=OneWay}" />

								<Separator />

								<Label Content="並べ替え：" />

								<Button
									Content="▲"
									Command="{Binding ColumnMoveUpCommand, Mode=OneTime}"
									CommandParameter="{Binding SelectedColumnSetting, Mode=OneWay}" />

								<Button
									Content="▼"
									Command="{Binding ColumnMoveDownCommand, Mode=OneTime}"
									CommandParameter="{Binding SelectedColumnSetting, Mode=OneWay}" />
							</ToolBar>

							<TextBlock
								Margin="12 8"
								DockPanel.Dock="Top">
								<Run Text="オプション：" />
								<Run Text="{Binding SelectedColumnSetting.Type, Mode=OneWay, Converter={StaticResource ColumnNameConverter}}" />
							</TextBlock>

							<ScrollViewer
								VerticalScrollBarVisibility="Auto">
								<ContentPresenter
									Margin="14 4 14 8"
									VerticalAlignment="Top"
									Content="{Binding SelectedColumnSetting, Converter={StaticResource ColumnSettingToColumnConverter}, Mode=OneWay}"
									ContentTemplateSelector="{StaticResource ColumnOptionTemplateSelector}"/>
							</ScrollViewer>
						</DockPanel>
					</TabItem>
				</TabControl>
			</TabItem>

			<TabItem Header="基本設定">
				<TabControl Style="{StaticResource TabControlStyle1}">
					<TabItem Header="全般">
						<StackPanel Style="{StaticResource ElementsContainerStyle}">
							<CheckBox Content="起動時にアップデートを確認する"
									  IsChecked="{Binding Setting.CheckUpdate}"/>

							<CheckBox Content="ログオン時に自動的に起動する"
									  IsChecked="{Binding AutoStartup}"/>

							<Label Content="メインウィンドウ" Style="{StaticResource HeaderLabelStyle2}" />

							<CheckBox
								Content="最小化して起動する"
								IsChecked="{Binding Setting.MinimizeStartup}"/>

							<CheckBox
								Content="閉じるボタンを押した際に最小化する"
								IsChecked="{Binding Setting.MinimizeAtCloseButtonClick}"/>

							<Label Content="タスクトレイ" Style="{StaticResource HeaderLabelStyle2}" />

							<CheckBox
								Content="アイコンをタスクトレイに表示する"
								IsChecked="{Binding ShowInTaskTray}" />

							<CheckBox 
								Margin="24 2 0 2"
								Content="最小化時にタスクバーに表示しない"
								IsChecked="{Binding ShowInTaskTrayAtMinimized}"
								IsEnabled="{Binding ShowInTaskTray, Mode=OneWay}" />

							<CheckBox 
								Margin="24 2 0 2"
								Content="最小化時にバルーンを表示する"
								IsChecked="{Binding Setting.ShowBalloonAtMinimized}"
								IsEnabled="{Binding ShowInTaskTray, Mode=OneWay}"/>


							<Label
								Content="システム"
								Style="{StaticResource HeaderLabelStyle2}" />

							<CheckBox
								Content="ログオフを抑止する"
								IsChecked="{Binding Setting.SuppressShutdown}" />

							<CheckBox
								Content="スリープモードへの移行を抑止する"
								IsChecked="{Binding Setting.SuppressStandby}"/>

							<CheckBox
								Content="スクリーンセーバーの表示を抑止する"
								IsChecked="{Binding Setting.SuppressScreenSaver}"/>
						</StackPanel>

					</TabItem>

					<TabItem Header="フォント設定">
						<Grid Background="{DynamicResource ToolBarBackground}">
							<Grid.RowDefinitions>
								<RowDefinition Height="auto" MaxHeight="84" />
								<RowDefinition Height="auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>

							<Border
								Background="{DynamicResource ToolBarBackground}"
								Grid.ColumnSpan="2">
								<TextBox
									Margin="6"
									TextWrapping="WrapWithOverflow"
									AcceptsReturn="True"
									AcceptsTab="False"
									ScrollViewer.VerticalScrollBarVisibility="Auto"
									ScrollViewer.HorizontalScrollBarVisibility="Auto"
									Height="60"
									FontSize="{Binding ViewFontSize, Mode=OneWay}"
									FontFamily="{Binding ViewFont, Mode=OneWay}"
									TextOptions.TextFormattingMode="{Binding ViewFontRendering}"
									Text="abcdefghijklmnopqrstuvwxyz ABCDEFGHIJLMNOPQSTUVWXYZ&#xa;1234567890.:,; ' &#x22; (!?) +-*/=&#xa;C# でプログラミングの世界が広がります。1234567890" />
							</Border>

							<ToolBar
								Grid.Row="1" Grid.ColumnSpan="2"
								Style="{StaticResource ToolBarStyle}">
								<xctk:DropDownButton
									Content="アカウントの追加"
									Style="{StaticResource ToolBarDropDownButton}">
									<xctk:DropDownButton.DropDownContent>
										<StackPanel Width="280" Margin="8">

											<TextBlock
												Margin="0 0 0 4">
												<Hyperlink Command="{Binding FontSelectCommand, Mode=OneTime}">
													<Run Text="フォントの参照" />
												</Hyperlink>
											</TextBlock>
											
											<local:PlaceHolderTextBox
												Margin="0 0 0 4"
												PlaceHolder="フォントフィルタ"
												Text="{Binding FontFontFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
											
											<Separator />

											<ListBox
												Margin="0 4"
												MaxHeight="240"
												SelectedItem="{Binding NewSelectedFont, Mode=TwoWay}"
												ItemsSource="{Binding FontFontList, Mode=OneWay}"
												ItemTemplate="{StaticResource FontViewTemplate}"
												IsSynchronizedWithCurrentItem="False"
												VirtualizingPanel.ScrollUnit="Pixel">
												<ListBox.ItemsPanel>
													<ItemsPanelTemplate>
														<VirtualizingStackPanel Orientation="Vertical" />
													</ItemsPanelTemplate>
												</ListBox.ItemsPanel>
											</ListBox>

											<Button 
												Content="選択"
												Width="100"
												CommandParameter="{Binding NewSelectedFont, Mode=OneWay}"
												Command="{Binding AddFontCommand, Mode=OneTime}"
												HorizontalAlignment="Center" />
										</StackPanel>
									</xctk:DropDownButton.DropDownContent>
								</xctk:DropDownButton>

								<Separator />

								<Button
									Content="削除"
									Command="{Binding RemoveFontCommand, Mode=OneTime}"
									CommandParameter="{Binding SelectedFont, Mode=OneWay}" />

								<Label Content="優先度：" />

								<Button
									Content="▲"
									Command="{Binding IncreaseFontPriorityCommand, Mode=OneTime}"
									CommandParameter="{Binding SelectedFont, Mode=OneWay}"  />

								<Button
									Content="▼"
									Command="{Binding DecreaseFontPriorityCommand, Mode=OneTime}"
									CommandParameter="{Binding SelectedFont, Mode=OneWay}"  />

								<Separator />

								<Button
									Content="フォント設定をリセット"
									Command="{Binding ResetFontCommand, Mode=OneTime}" />
							</ToolBar>


							<ListBox
								Grid.Row="2"
								BorderThickness="0 0 1 0"
								BorderBrush="#ccc"
								ItemTemplate="{StaticResource FontViewTemplate}"
								ItemsSource="{Binding ViewFonts, Mode=OneTime}"
								SelectedItem="{Binding SelectedFont, Mode=TwoWay}"
								SelectionMode="Single"
								TextOptions.TextFormattingMode="{Binding ViewFontRendering}" />

							<StackPanel
								Margin="8 0 16 8"
								Grid.Row="3"
								Grid.Column="1"
								Width="140">
								<Label Content="フォントサイズ(pt)" Style="{StaticResource HeaderLabelStyle2}" Margin="0" />

								<ComboBox
									Grid.Column="1"
									IsEditable="True"
									Text="{Binding ViewFontSize, UpdateSourceTrigger=PropertyChanged}">
									<ComboBoxItem>8</ComboBoxItem>
									<ComboBoxItem>9</ComboBoxItem>
									<ComboBoxItem>10</ComboBoxItem>
									<ComboBoxItem>10.5</ComboBoxItem>
									<ComboBoxItem>11</ComboBoxItem>
									<ComboBoxItem>12</ComboBoxItem>
									<ComboBoxItem>14</ComboBoxItem>
									<ComboBoxItem>16</ComboBoxItem>
									<ComboBoxItem>18</ComboBoxItem>
									<ComboBoxItem>20</ComboBoxItem>
									<ComboBoxItem>22</ComboBoxItem>
									<ComboBoxItem>24</ComboBoxItem>
									<ComboBoxItem>26</ComboBoxItem>
									<ComboBoxItem>28</ComboBoxItem>
									<ComboBoxItem>36</ComboBoxItem>
									<ComboBoxItem>48</ComboBoxItem>
									<ComboBoxItem>72</ComboBoxItem>
								</ComboBox>

								<Label Content="フォントレンダリング" Style="{StaticResource HeaderLabelStyle2}" />
								<RadioButton
									Margin="12 0 0 4"
									Content="GDI互換"
									IsChecked="{Binding IsLegacyGDIRender}"/>
								<RadioButton
									Margin="12 0 0 0"
									Content="GDI+"
									IsChecked="{Binding IsGDIPlusRender}"/>
							</StackPanel>
						</Grid>
					</TabItem>
				</TabControl>
			</TabItem>

			<TabItem Header="投稿">
				<StackPanel Style="{StaticResource ElementsContainerStyle}">
					<CheckBox
						IsChecked="{Binding Setting.IncludeOtherAtReply, Mode=TwoWay}"
						Content="リプライに他の会話中のアカウントを含める" />
					
					<CheckBox
						IsChecked="{Binding Setting.CloseWindowAfterPostComplated, Mode=TwoWay}"
						Content="ツイートの投稿が完了したらウィンドウを閉じる" />

					<Label Content="デフォルト設定" Style="{StaticResource HeaderLabelStyle2}"/>

					<CheckBox
						IsChecked="{Binding Setting.NoticePostSensitiveMedia, Mode=TwoWay}"
						Content="不適切な表現を含む画像および動画であることを告示する" />
				</StackPanel>
			</TabItem>

			<TabItem Header="通知">
				<TabControl Style="{StaticResource TabControlStyle1}">
					<TabItem Header="全般">
						<StackPanel Style="{StaticResource ElementsContainerStyle}">
							<CheckBox
								Content="通知機能を使用する"
								IsChecked="{Binding Setting.EnableNotification}"/>

							<Label
								Margin="0 8 0 0" Content="通知方法"
								Style="{StaticResource HeaderLabel}" />

							<CheckBox
								Content="音声を再生する"
								IsChecked="{Binding Setting.EnableSoundNotification}" />

							<CheckBox 
								Content="ポップアップを表示する"
								IsChecked="{Binding Setting.EnablePopupNotification}"/>

							<Label
								Margin="0 8 0 0" Content="通知項目"
								Style="{StaticResource HeaderLabel}" />

							<UniformGrid Columns="2">
								<CheckBox
									Content="リプライ"
									IsChecked="{Binding Setting.Notification_Reply}"/>

								<CheckBox
									Content="フォロー"
									IsChecked="{Binding Setting.Notification_Follow}" />

								<CheckBox
									Content="いいね"
									IsChecked="{Binding Setting.Notification_Favorite}" />

								<CheckBox
									Content="リツイート"
									IsChecked="{Binding Setting.Notification_Retweet}" />

								<CheckBox
									Content="リストへ追加"
									IsChecked="{Binding Setting.Notification_ListMemberAdded}" />

								<!--<CheckBox Content="リストから除外された"
										  IsChecked="{Binding Setting.}" />-->

								<CheckBox
									Content="リツイートにいいね"
									IsChecked="{Binding Setting.Notification_FavoritedRetweet}" />

								<CheckBox
									Content="リツイートがリツイート"
									IsChecked="{Binding Setting.Notification_RetweetedRetweet}" />

								<CheckBox
									Content="引用ツイート"
									IsChecked="{Binding Setting.Notification_QuotedTweet}" />

								<CheckBox
									Content="ダイレクトメッセージ"
									IsChecked="{Binding Setting.Notification_DirectMessageReceived}" />
							</UniformGrid>
						</StackPanel>
					</TabItem>

					<TabItem Header="音声設定">
						<StackPanel Margin="{StaticResource ContainerMargin}">
							<Label Content="ファイル" Style="{StaticResource HeaderLabel}" />
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="auto" />
								</Grid.ColumnDefinitions>

								<TextBox
									IsReadOnly="True"
									Text="{Binding NotificationSoundFile, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

								<Button
									Margin="6 0 0 0"
									Padding="6 4"
									Content="..."
									Grid.Column="1" />
							</Grid>

							<StackPanel Margin="0 6 0 0" Orientation="Horizontal" HorizontalAlignment="Left">
								<Button Content="再生" />
								<Button Content="停止" Margin="6 0 0 0" />
							</StackPanel>
						</StackPanel>
					</TabItem>
				</TabControl>
			</TabItem>

			<TabItem Header="タイムライン">
				<TabControl Style="{StaticResource TabControlStyle1}">
					<TabItem Header="ツイート">
						<DockPanel Background="White" TextBlock.Foreground="Black">
							<Border
								DockPanel.Dock="Right" Width="250"
								Background="{StaticResource ToolBarBackground}"
								BorderBrush="{StaticResource ToolBarBorderBrush}"
								BorderThickness="1 0 0 0">
								<StackPanel Style="{StaticResource ElementsContainerStyle}">
									<Label
										Content="設定"
										Style="{StaticResource HeaderLabel}" />
									<CheckBox 
										Content="画像を表示する"
										IsChecked="{Binding Setting.TimelineStatusShowMedia}" />
									<CheckBox 
										Content="引用ツイートを表示する"
										IsChecked="{Binding Setting.TimelineStatusShowQuotedTweet}" />

									<Label
										Content="投稿時刻の表示方法"
										Style="{StaticResource HeaderLabelStyle2}"/>
									<RadioButton
										Content="絶対時刻"
										IsChecked="{Binding TimelineStatusShowAbsoluteTime}"/>
									<TextBlock
										Foreground="{StaticResource DisabledForeground}"
										Margin="24 0 0 0" Text="e.g. 1990年1月1日 0時0分" />
									<RadioButton
										Content="相対時刻（e.g. 3日前）"
										IsChecked="{Binding TimelineStatusShowRelativeTime}"/>
									<TextBlock
										Foreground="{StaticResource DisabledForeground}"
										Margin="24 0 0 0" Text="e.g. 3分前" />
								</StackPanel>
							</Border>

							<ScrollViewer>
								<Border VerticalAlignment="Top">
									<Grid Background="Transparent">
										<DockPanel Margin="4">
											<DockPanel
												DockPanel.Dock="Bottom"
												Margin="8 4 8 8">
												<UniformGrid
													DockPanel.Dock="Right"
													HorizontalAlignment="Right"
													Rows="1" Width="160">
													<Button
														Style="{StaticResource ActionButton}"
														Content="&#xf112;"
														Foreground="#07c"
														FontSize="18" />
													<ToggleButton
														Foreground="Green"
														Content="&#xf079;" FontSize="20"
														Style="{StaticResource ActionToggleButton}"/>
													<ToggleButton
														Foreground="Red"
														Content="&#xf004;" FontSize="16"
														Style="{StaticResource ActionToggleButton}"/>
												</UniformGrid>

												<TextBlock
													DockPanel.Dock="Left"
													VerticalAlignment="Center"
													TextTrimming="CharacterEllipsis">
													<Hyperlink Style="{StaticResource MetadataLinkText}">
														<Run Text="Liberfy" />
													</Hyperlink>
												</TextBlock>
											</DockPanel>

											<Button
												Margin="4"
												DockPanel.Dock="Left"
												Width="48" Height="48"
												VerticalAlignment="Top"
												Style="{StaticResource ImageButton}">
												<Border
													Width="48" Height="48"
													Background="#ccc" />
											</Button>

											<DockPanel
												Margin="4 4 4 4"
												DockPanel.Dock="Top">
												<Border
													Visibility="Collapsed"
													DockPanel.Dock="Left"
													Width="16" Height="16"/>

												<TextBlock
													DockPanel.Dock="Right"
													VerticalAlignment="Top"
													HorizontalAlignment="Right"
													FontSize="11">
													<Hyperlink Style="{StaticResource MetadataLinkText}">
														<Run Text="1時間" />
													</Hyperlink>
												</TextBlock>

												<TextBlock
													DockPanel.Dock="Left"
													FontWeight="Bold"
													VerticalAlignment="Center"
													HorizontalAlignment="Left">
													<Hyperlink Style="{StaticResource UserNameLinkText}">
														<Run Text="Dummy User" />
													</Hyperlink>
												</TextBlock>

												<TextBlock
													DockPanel.Dock="Left"
													VerticalAlignment="Center"
													HorizontalAlignment="Left">
													<Hyperlink Style="{StaticResource UserNameLinkText}">
														<Run Text="@dummy_user" />
													</Hyperlink>
												</TextBlock>
											</DockPanel>

											<TextBlock
												TextWrapping="Wrap"
												DockPanel.Dock="Top"
												HorizontalAlignment="Stretch"
												Margin="{StaticResource TimelineItemEntityMargin}"
												Text="つれづれなるまゝに、日ぐらし硯に向かひて、心にうつりゆくよしなしごとをそこはかとなく書き付くれば、あやしうこそ物狂ほしけれ。" />

											<Border
												Height="120"
												DockPanel.Dock="Top"
												Margin="3 0 3 4"
												local:ElementBehavior.Visible="{Binding Setting.TimelineStatusShowMedia, Mode=OneWay}">
												<Grid>
													<Grid.RowDefinitions>
														<RowDefinition />
														<RowDefinition />
														<RowDefinition />
													</Grid.RowDefinitions>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="4*" />
														<ColumnDefinition Width="2*" />
													</Grid.ColumnDefinitions>

													<Button
														Margin="1"
														Grid.RowSpan="3" />
													<Button
														Margin="1"
														Grid.Column="1" />
													<Button
														Margin="1"
														Grid.Row="1"
														Grid.Column="1" />
													<Button
														Margin="1"
														Grid.Row="2"
														Grid.Column="1" />
												</Grid>
											</Border>

											<Border
												DockPanel.Dock="Top"
												Margin="{StaticResource TimelineItemEntityMargin}">
												<Button
													Padding="8 5"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Style="{StaticResource QuotedTweetButtonStyle}"
													local:ElementBehavior.Visible="{Binding Setting.TimelineStatusShowQuotedTweet, Mode=OneWay}">
													<DockPanel>
														<Border
															Width="80"
															Margin="6 0 0 0"
															DockPanel.Dock="Right"
															BorderThickness="1"
															BorderBrush="#6888"/>

														<DockPanel DockPanel.Dock="Top">
															<TextBlock
																FontWeight="Black"
																DockPanel.Dock="Left"
																Style="{StaticResource UserNameTextStyle}">
																<Hyperlink Style="{StaticResource UserNameLinkText}">
																	<Run Text="Quoted User" />
																</Hyperlink>
															</TextBlock>
															<TextBlock
																DockPanel.Dock="Left"
																Style="{StaticResource UserNameTextStyle}"
																HorizontalAlignment="Stretch">
																<Hyperlink Style="{StaticResource UserNameLinkText}">
																	<Run Text="@quoted_user" />
																</Hyperlink>
															</TextBlock>
														</DockPanel>

														<TextBlock 
															DockPanel.Dock="Top" MaxHeight="40"
															TextWrapping="WrapWithOverflow"
															TextTrimming="CharacterEllipsis"
															Text="つれづれなるまゝに、日ぐらし硯に向かひて、心にうつりゆくよしなしごとをそこはかとなく書き付くれば、あやしうこそ物狂ほしけれ。" />
													</DockPanel>
												</Button>
											</Border>

											<Border
												DockPanel.Dock="Top"
												BorderThickness="0 1"
												BorderBrush="#bbb"
												Padding="4 6"
												Margin="{StaticResource TimelineItemEntityMargin}">
												<DockPanel>
													<TextBlock
														DockPanel.Dock="Left"
														FontFamily="{StaticResource FontAwesome}"
														Text="&#xf079;" Foreground="Green"
														Margin="2 0 6 0"
														FontSize="20" TextOptions.TextFormattingMode="Ideal"
														VerticalAlignment="Center"/>

													<Button
														Style="{StaticResource ImageButton}"
														Width="28" Height="28"
														Margin="0 0 8 0"
														DockPanel.Dock="Left">
														<Border
															Width="28" Height="28"
															Background="#ece"/>
													</Button>

													<TextBlock
														FontWeight="Bold"
														DockPanel.Dock="Left"
														VerticalAlignment="Center"
														HorizontalAlignment="Left"
														TextTrimming="CharacterEllipsis">
														<Hyperlink Style="{StaticResource UserNameLinkText}">
															<Run Text="Retweet User" />
														</Hyperlink>
													</TextBlock>
													<TextBlock
														DockPanel.Dock="Left"
														VerticalAlignment="Center"
														HorizontalAlignment="Left"
														TextTrimming="CharacterEllipsis">
														<Hyperlink Style="{StaticResource UserNameLinkText}">
															<Run Text="@retweet_user" />
														</Hyperlink>
													</TextBlock>
												</DockPanel>
											</Border>

										</DockPanel>

										<Polygon
											Height="16" Width="16"
											VerticalAlignment="Top"
											HorizontalAlignment="Left"
											Points="0,0 16,0 0,16"
											Fill="Black"/>
									</Grid>
								</Border>
							</ScrollViewer>
						</DockPanel>

					</TabItem>
					<TabItem Header="ツイート（詳細）">
						<DockPanel Background="White" TextBlock.Foreground="Black">
							<Border
								DockPanel.Dock="Right" Width="250"
								Background="{StaticResource ToolBarBackground}"
								BorderBrush="{StaticResource ToolBarBorderBrush}"
								BorderThickness="1 0 0 0">
								<StackPanel Style="{StaticResource ElementsContainerStyle}">

									<Label
										Content="設定"
										Style="{StaticResource HeaderLabel}" />
									<CheckBox 
										Content="画像を表示する"
										IsChecked="{Binding Setting.TimelineStatusDetailShowMedia}" />
									<CheckBox 
										Content="引用ツイートを表示する"
										IsChecked="{Binding Setting.TimelineStatusDetailShowQuotedTweet}"/>

									<Label
										Content="投稿時刻の表示方法"
										Style="{StaticResource HeaderLabelStyle2}"/>
									<RadioButton
										Content="絶対時刻"
										IsChecked="{Binding TimelineStatusShowAbsoluteTimeDetail}"/>
									<TextBlock
										Foreground="{StaticResource DisabledForeground}"
										Margin="24 0 0 0" Text="e.g. 1990年1月1日 0時0分" />
									<RadioButton
										Content="相対時刻（e.g. 3日前）"
										IsChecked="{Binding TimelineStatusShowRelativeTimeDetail}"/>
									<TextBlock
										Foreground="{StaticResource DisabledForeground}"
										Margin="24 0 0 0" Text="e.g. 3分前" />
								</StackPanel>
							</Border>

							<ScrollViewer>
								<DockPanel
									Margin="4"
									VerticalAlignment="Top">
									<DockPanel
										DockPanel.Dock="Bottom"
										Margin="8 4 8 8">
										<UniformGrid
											DockPanel.Dock="Right"
											HorizontalAlignment="Right"
											Rows="1" Width="160">
											<Button
												Style="{StaticResource ActionButton}"
												Content="&#xf112;"
												Foreground="#07c"
												FontSize="18" />
											<ToggleButton
												Foreground="Green"
												Content="&#xf079;" FontSize="20"
												Style="{StaticResource ActionToggleButton}"/>
											<ToggleButton
												Foreground="Red"
												Content="&#xf004;" FontSize="16"
												Style="{StaticResource ActionToggleButton}"/>

										</UniformGrid>

										<TextBlock
											DockPanel.Dock="Left"
											VerticalAlignment="Center"
											TextTrimming="CharacterEllipsis">
											<Hyperlink Style="{StaticResource MetadataLinkText}">
												<Run Text="Liberfy" />
											</Hyperlink>
										</TextBlock>
									</DockPanel>

									<Button
										Margin="4"
										DockPanel.Dock="Left"
										Width="48" Height="48"
										VerticalAlignment="Top"
										Style="{StaticResource ImageButton}">
										<Border
											Width="48" Height="48"
											Background="#ccc" />
									</Button>

									<DockPanel
										Margin="4 4 4 4"
										DockPanel.Dock="Top">
										<Border
											Visibility="Collapsed"
											DockPanel.Dock="Left"
											Width="16" Height="16"/>

										<TextBlock
											DockPanel.Dock="Right"
											VerticalAlignment="Top"
											HorizontalAlignment="Center"
											FontSize="11">
											<Hyperlink Style="{StaticResource MetadataLinkText}">
												<Run Text="1時間" />
											</Hyperlink>
										</TextBlock>

										<TextBlock
											DockPanel.Dock="Top"
											FontWeight="Bold"
											VerticalAlignment="Center"
											HorizontalAlignment="Left">
											<Hyperlink Style="{StaticResource UserNameLinkText}">
												<Run Text="Dummy User" />
											</Hyperlink>
										</TextBlock>

										<TextBlock
											DockPanel.Dock="Top"
											VerticalAlignment="Center"
											HorizontalAlignment="Left">
											<Hyperlink Style="{StaticResource UserNameLinkText}">
												<Run Text="@dummy_user" />
											</Hyperlink>
										</TextBlock>
									</DockPanel>

									<TextBox
										Padding="0"
										BorderThickness="0"
										TextWrapping="Wrap"
										DockPanel.Dock="Top"
										HorizontalAlignment="Stretch"
										Margin="2 -2 2 2" IsReadOnly="True"
										Text="つれづれなるまゝに、日ぐらし硯に向かひて、心にうつりゆくよしなしごとをそこはかとなく書き付くれば、あやしうこそ物狂ほしけれ。" />

									<Border
										Height="120"
										DockPanel.Dock="Top"
										Margin="3 0 3 4"
										local:ElementBehavior.Visible="{Binding Setting.TimelineStatusDetailShowMedia, Mode=OneWay}">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition />
												<RowDefinition />
												<RowDefinition />
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="4*" />
												<ColumnDefinition Width="2*" />
											</Grid.ColumnDefinitions>

											<Button
												Margin="1"
												Grid.RowSpan="3" />
											<Button
												Margin="1"
												Grid.Column="1" />
											<Button
												Margin="1"
												Grid.Row="1"
												Grid.Column="1" />
											<Button
												Margin="1"
												Grid.Row="2"
												Grid.Column="1" />
										</Grid>
									</Border>

									<Border
										DockPanel.Dock="Top"
										Margin="{StaticResource TimelineItemEntityMargin}"
										local:ElementBehavior.Visible="{Binding Setting.TimelineStatusDetailShowQuotedTweet, Mode=OneWay}">
										<Button
											Padding="8 5"
											VerticalContentAlignment="Stretch"
											HorizontalContentAlignment="Stretch"
											Style="{StaticResource QuotedTweetButtonStyle}">
											<DockPanel>
												<Border
													Width="80"
													Margin="6 0 0 0"
													DockPanel.Dock="Right"
													BorderThickness="1"
													BorderBrush="#6888"/>

												<DockPanel DockPanel.Dock="Top">
													<TextBlock
														FontWeight="Black"
														DockPanel.Dock="Left"
														Style="{StaticResource UserNameTextStyle}">
														<Hyperlink Style="{StaticResource UserNameLinkText}">
															<Run Text="Quoted User" />
														</Hyperlink>
													</TextBlock>
													<TextBlock
														DockPanel.Dock="Left"
														Style="{StaticResource UserNameTextStyle}"
														HorizontalAlignment="Stretch">
														<Hyperlink Style="{StaticResource UserNameLinkText}">
															<Run Text="@quoted_user" />
														</Hyperlink>
													</TextBlock>
												</DockPanel>

												<TextBlock 
													DockPanel.Dock="Top" MaxHeight="40"
													TextWrapping="WrapWithOverflow"
													TextTrimming="CharacterEllipsis"
													Text="つれづれなるまゝに、日ぐらし硯に向かひて、心にうつりゆくよしなしごとをそこはかとなく書き付くれば、あやしうこそ物狂ほしけれ。" />
											</DockPanel>
										</Button>
									</Border>

									<Border
										DockPanel.Dock="Top"
										BorderThickness="0 1"
										BorderBrush="#bbb"
										Padding="0 2"
										Margin="{StaticResource TimelineItemEntityMargin}">
										<DockPanel>
											<Button
												Padding="6 6"
												DockPanel.Dock="Left"
												HorizontalAlignment="Left"
												Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
												<TextBlock>
													<Run Text="リツイート" FontWeight="Bold" />
													<Run Text="1,024" />
												</TextBlock>
											</Button>

											<Button
												Padding="6 6"
												Margin="4 0 0 0"
												DockPanel.Dock="Left"
												HorizontalAlignment="Left"
												Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
												<TextBlock>
													<Run Text="いいね" FontWeight="Bold" />
													<Run Text="1,024" />
												</TextBlock>
											</Button>
										</DockPanel>
									</Border>


								</DockPanel>
							</ScrollViewer>
						</DockPanel>
					</TabItem>
				</TabControl>
			</TabItem>

			<TabItem Header="ミュート">
				<TabControl Style="{StaticResource TabControlStyle1}">
					<TabItem Header="ミュート項目一覧">
						<DockPanel>
							<Border
								DockPanel.Dock="Top"
								Padding="4"
								BorderBrush="{DynamicResource ToolBarBorderBrush}"
								Background="{DynamicResource ToolBarBackground}"
								BorderThickness="0 0 0 1">
								<Grid
									Margin="4"
									DockPanel.Dock="Top">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="120" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>

									<TextBlock
										Margin="4 0 4 0"
										Text="ミュートの種類"
										HorizontalAlignment="Right"
										VerticalAlignment="Center"/>

									<TextBlock
										Grid.Column="2"
										Margin="12 0 4 0"
										Text="検索方法"
										HorizontalAlignment="Right"
										VerticalAlignment="Center"/>

									<TextBlock
										Grid.Row="1"
										Text="内容"
										Margin="12 0 4 0"
										HorizontalAlignment="Right"
										VerticalAlignment="Center"/>

									<ComboBox
										Margin="4 4 0 4"
										Grid.Column="1"
										SelectedIndex="0"
										SelectedValuePath="Key"
										DisplayMemberPath="Value"
										SelectedValue="{Binding TempMuteType}"
										ItemsSource="{x:Static local:UILocalize.MuteTypes}" />

									<ComboBox
										Margin="4"
										Grid.Column="3"
										SelectedIndex="0"
										SelectedValuePath="Key"
										DisplayMemberPath="Value"
										SelectedValue="{Binding TempMuteSearch}"
										ItemsSource="{x:Static local:UILocalize.MuteMatchTypes}" />

									<TextBox
										Margin="4 0"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="4"
										Text="{Binding TempMuteText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

									<Button
										Margin="4"
										Grid.Column="4"
										Content="追加"
										CommandParameter="add"
										Command="{Binding MuteAddCommand, Mode=OneTime}"/>
								</Grid>
							</Border>

							<ListBox
								BorderThickness="0"
								ItemsSource="{Binding MuteList, Mode=OneTime}"
								SelectedItem="{Binding SelectedMute, Mode=TwoWay}">
								<ListBox.ItemTemplate>
									<DataTemplate DataType="{x:Type local:Mute}">
										<Grid Margin="8">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="auto" />
												<ColumnDefinition Width="120" />
												<ColumnDefinition Width="120" />
												<ColumnDefinition />
											</Grid.ColumnDefinitions>

											<StackPanel
												VerticalAlignment="Center">
												<Button 
													Content="&#xf00d;"
													Padding="4 3"
													Margin="0 0 6 0"
													Background="Red"
													FontFamily="{StaticResource FontAwesome}"
													CommandParameter="{Binding}"
													Command="{Binding DataContext.MuteRemoveCommand, Mode=OneTime,
														RelativeSource={RelativeSource AncestorType={x:Type ListBox}, AncestorLevel=1}}"
													Style="{StaticResource SimpleButtonStyle}" />
											</StackPanel>

											<TextBlock
												Margin="4 0"
												Grid.Column="1"
												FontWeight="Bold"
												VerticalAlignment="Center"
												Text="{Binding Type, Mode=OneTime, Converter={StaticResource MuteTypeNameConverter}}"/>

											<TextBlock
												Margin="4 0"
												Grid.Column="2"
												FontWeight="Bold"
												VerticalAlignment="Center"
												Text="{Binding Search, Mode=OneTime, Converter={StaticResource MuteSearchTypeNameConverter}}"/>

											<TextBlock
												Grid.Column="3"
												VerticalAlignment="Center"
												Margin="0 0"
												TextWrapping="Wrap"
												Text="{Binding Text, Mode=OneTime}" />
										</Grid>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</DockPanel>
					</TabItem>

					<TabItem Header="その他の設定">
						<StackPanel Style="{StaticResource ElementsContainerStyle}">
							<CheckBox Content="Twitterのミュート設定を使用する" />
							<CheckBox Content="Twitterのブロック設定を使用する" />
						</StackPanel>
					</TabItem>
				</TabControl>
			</TabItem>

			<TabItem Header="NowPlaying">
				<StackPanel Style="{StaticResource ElementsContainerStyle}">

					<CheckBox 
						Content="アートワークを添付する"
						HorizontalAlignment="Left"	  
						IsChecked="{Binding Setting.InsertThumbnailAtNowPlayying}"/>

					<TextBlock
						Foreground="Black"
						Text="既定のプレーヤ" />
					<ComboBox
						Margin="2"
						Width="200"
						HorizontalAlignment="Left"
						DisplayMemberPath="Value"
						SelectedValuePath="Key"
						SelectedValue="{Binding Setting.NowPlayingDefaultPlayer, Mode=TwoWay}"
						ItemsSource="{x:Static vm:TweetWindow.NowPlayingPlayerList}">
						
					</ComboBox>

					<Label Content="フォーマット：" Style="{StaticResource HeaderLabel}" />

					<TextBox
						AcceptsReturn="True"
						TextWrapping="Wrap"
						Text="{Binding NowPlayingFormat, UpdateSourceTrigger=PropertyChanged}">
						<i:Interaction.Behaviors>
							<b:TextBoxBehavior Controller="{Binding NowPlayingTextBoxController}" />
						</i:Interaction.Behaviors>
					</TextBox>

					<Label
						Content="NowPlayingの置換文字列："
						Style="{StaticResource HeaderLabelStyle2}" />

					<UniformGrid Columns="2" Margin="8 0 0 0">
						<Button
							Content="%album% - アルバム名" 
							CommandParameter="%album%" />

						<Button
							Content="%album__artist% - アルバムのアーティスト" 
							CommandParameter="%album_artist%" />

						<Button
							Content="%artist% - アーティスト名" 
							CommandParameter="%artist%" />

						<Button
							Content="%composer% - 作曲者" 
							CommandParameter="%composer%" />

						<Button
							Content="%category% - カテゴリ" 
							CommandParameter="%category%" />

						<Button
							Content="%genre% - ジャンル" 
							CommandParameter="%genre%" />

						<Button
							Content="%name% - 楽曲名" 
							CommandParameter="%name%" />

						<Button
							Content="%number% - トラック番号" 
							CommandParameter="%number%" />

						<Button
							Content="%year% - 年代" 
							CommandParameter="%year%" />

						<Button
							Content="リセット" 
							Command="{Binding ResetNowPlayingCommand, Mode=OneTime}" />

						<UniformGrid.Resources>
							<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
								<Setter Property="Padding" Value="8 4 12 4" />
								<Setter Property="Margin" Value="0 4 8 2" />
								<Setter Property="HorizontalAlignment" Value="Stretch" />
								<Setter Property="HorizontalContentAlignment" Value="Left" />
								<Setter Property="Command" Value="{Binding InsertNowPlayingParamCommand, Mode=OneTime}" />
							</Style>
						</UniformGrid.Resources>
					</UniformGrid>
				</StackPanel>
			</TabItem>
		</TabControl>
	</DockPanel>
</Window>
