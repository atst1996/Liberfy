<Application
	x:Class="Liberfy.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Liberfy"
	xmlns:vm="clr-namespace:Liberfy.ViewModel"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:conv="clr-namespace:Liberfy.Converter"
	StartupUri="View/MainWindow.xaml"
	ShutdownMode="OnExplicitShutdown">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Themes\Generic.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<!--#region -->
			<conv:BoolInverter x:Key="BoolInverter" />
			<!--#endregion-->

			<sys:Boolean x:Key="ShowImageInTimeline">True</sys:Boolean>
			<sys:Boolean x:Key="ShowImageInDetail">True</sys:Boolean>
			<sys:Boolean x:Key="RelativeTime">True</sys:Boolean>
			<sys:Boolean x:Key="ShowActionButtonInTimeline">True</sys:Boolean>
			<TextFormattingMode x:Key="TextFormattingMode">Display</TextFormattingMode>

			<Thickness x:Key="BottomThickness" Bottom="1" />

			<ItemContainerTemplate x:Key="ItemsContainerStyle">
				<VirtualizingStackPanel />
			</ItemContainerTemplate>
			
			<Style x:Key="ToolBarBorderStyle" TargetType="{x:Type Border}">
				<Setter Property="Background" Value="{DynamicResource ToolBarBackground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ToolBarBorderBrush}" />
				<Setter Property="BorderThickness" Value="{StaticResource BottomThickness}" />
				<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToolBarForeground}" />
			</Style>

			<!--#region Data templates -->

			<DataTemplate DataType="{x:Type vm:AuthenticationViewModel}">
				<Border
					BorderThickness="2"
					BorderBrush="#ccc">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="auto" />
						</Grid.RowDefinitions>

						<Border
							Grid.Row="1"
							Padding="5"
							Background="#eee">
							<StackPanel 
								Orientation="Horizontal"
								HorizontalAlignment="Right">
								<Button
									Margin="4" Padding="18 2"
									Content="次へ(_N)"
									Command="{Binding NextCommand, Mode=OneTime}"/>
								<Button
									Margin="4" Padding="18 2"
									Content="閉じる(_C)"
									Command="{Binding CancelCommand, Mode=OneTime}"/>
							</StackPanel>
						</Border>

						<TabControl
							Margin="16 16 16 8"
							SelectedIndex="{Binding PageIndex, Mode=TwoWay}"
							Background="{x:Static Brushes.Transparent}"
							BorderThickness="0" Padding="0">
							<TabControl.ItemContainerStyle>
								<Style TargetType="{x:Type TabItem}">
									<Setter Property="Visibility" Value="Collapsed" />
								</Style>
							</TabControl.ItemContainerStyle>

							<TabItem>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="auto" />
										<RowDefinition Height="auto" />
										<RowDefinition Height="auto" />
									</Grid.RowDefinitions>

									<TextBlock
										Grid.Row="1" TextWrapping="Wrap"
										Foreground="Red" FontWeight="Bold"
										Text="{Binding Error, Mode=OneWay}" />

									<Label
										Grid.ColumnSpan="2"
										Padding="0" FontSize="20"
										Content="アカウントの追加" />

									<CheckBox 
										Margin="0 0 0 6"
										Grid.Row="2" Grid.ColumnSpan="2"
										IsChecked="{Binding OverrideKey}"
										Content="Liberfy以外のAPIキーを使用する"/>

									<TextBlock
										Grid.Row="3"
										Text="ConsumerKey   " 
										VerticalAlignment="Center"
										local:ElementBehavior.Show="{Binding OverrideKey, Mode=OneWay}" />
									<TextBlock
										Grid.Row="4"
										Text="ConsumerSecret   "
										VerticalAlignment="Center"
										local:ElementBehavior.Show="{Binding OverrideKey, Mode=OneWay}" />

									<TextBox
										Margin="0 4" Grid.Row="3" Grid.Column="1"
										local:ElementBehavior.Show="{Binding OverrideKey, Mode=OneWay}"
										Text="{Binding ConsumerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									<TextBox
										Margin="0 4" Grid.Row="4" Grid.Column="1"
										local:ElementBehavior.Show="{Binding OverrideKey, Mode=OneWay}"
										Text="{Binding ConsumerSecret, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								</Grid>
							</TabItem>

							<TabItem>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="auto" />
										<RowDefinition Height="auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="auto" />
										<RowDefinition Height="auto" />
									</Grid.RowDefinitions>

									<TextBlock
										Grid.Row="1" TextWrapping="Wrap"
										Foreground="Red" FontWeight="Bold"
										Text="{Binding Error, Mode=OneWay}" />

									<Label
										Padding="0" FontSize="20"
										Content="PINコードの入力" />

									<TextBlock
										Grid.Row="1" TextWrapping="Wrap"
										Text="Liberfyを認証し、表示されるPINコードを入力してください。" />

									<TextBlock Grid.Row="3" VerticalAlignment="Center">
										<Hyperlink Command="{Binding CopyClipboardCommand, Mode=OneTime}">
											<Run Text="URLをクリップボードにコピーする" />
										</Hyperlink>
									</TextBlock>

									<TextBox
										Margin="0 4" Grid.Row="4" FontSize="24" FontWeight="Bold"
										FontFamily="Comic Sans MS" Foreground="#444" TextAlignment="Center"
										Text="{Binding PinCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										IsEnabled="{Binding IsRunning, Mode=OneWay, Converter={StaticResource BoolInverter}}" />
								</Grid>
							</TabItem>

							<TabItem>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="auto" />
									</Grid.RowDefinitions>

									<TextBlock
										Grid.Row="1" TextWrapping="Wrap"
										Foreground="Red" FontWeight="Bold"
										Text="{Binding Error, Mode=OneWay}" />

									<Label
										Grid.ColumnSpan="2"
										Padding="0" FontSize="20"
										Content="認証エラー" />

								</Grid>
							</TabItem>
						</TabControl>
					</Grid>
				</Border>
			</DataTemplate>

			<DataTemplate x:Key="AccountItemTemplate" DataType="{x:Type local:Account}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<Image
						Margin="0 0 8 0" Width="36" Height="36"
						Source="{Binding Info.ProfileImageUrl}" />

					<StackPanel Grid.Column="1" VerticalAlignment="Center">
						<TextBlock Text="{Binding Info.Name, Mode=OneWay}" FontWeight="Bold" />
						<TextBlock Text="{Binding Info.ScreenName, Mode=OneWay, StringFormat='{}@{0}'}" />
					</StackPanel>
				</Grid>
			</DataTemplate>

			<Style x:Key="AccountListItemTemplate" TargetType="{x:Type ListViewItem}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListViewItem}">
							<Border
								x:Name="border"
								Padding="8"
								Background="Transparent">
								<ContentPresenter />
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="border" Property="Background" Value="#1222" />
								</Trigger>

								<Trigger Property="IsSelected" Value="True">
									<Setter TargetName="border" Property="Background" Value="#2444" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<!--#endregion-->

		</ResourceDictionary>
	</Application.Resources>
</Application>
