<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:is="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:app="clr-namespace:Liberfy"
    xmlns:conv="clr-namespace:Liberfy.Converter">

    <conv:BoolInverter x:Key="BoolInverter" />

    <!--#region Geometries-->

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <!--#endregion-->

    <DropShadowEffect x:Key="UIEffectShadow" x:Shared="False" ShadowDepth="1" BlurRadius="3" Opacity=".1" Direction="270" Color="#666" />

    <DropShadowEffect x:Key="emptyShadow" x:Shared="False" Opacity=".0" />

    <Style x:Key="ImageButton" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="auto" />
    </Style>

    <ControlTemplate x:Key="SimpleContentButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border Background="{TemplateBinding Background}">
            <ContentPresenter
                Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="ActionButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="RenderOptions.CachingHint" Value="Cache" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Opacity" Value=".6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource SimpleContentButtonTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="#222" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1.0" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".8" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ReplyActionButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ActionButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#07c" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ActionToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="RenderOptions.CachingHint" Value="Cache" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Opacity" Value=".6" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource SimpleContentButtonTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Foreground" Value="#222" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1.0" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RetweetActionToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ActionToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="Green" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavoriteActionToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ActionToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UserNameLinkText" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="TextDecorations" Value="None" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetadataLinkText" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="#888" />
        <Setter Property="TextDecorations" Value="None" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HyperlinkText" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UserNameTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="QuotedTweetButtonStyle" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#aaa" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Thickness x:Key="TimelineItemEntityMargin">4 0 4 4</Thickness>

    <Duration x:Key="UIAnimationSpeed">0:0:0.2</Duration>
    <Duration x:Key="zeroTime">0:0:0.0</Duration>

    <ItemsPanelTemplate x:Key="HorizontalPanelTemplate">
        <StackPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <DataTemplate x:Key="EmptyDataTemplate" />

    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="#FF3E93F9" />
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Padding" Value="8 3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Border
                                x:Name="border"
                                Background="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="#7777">
                            <ContentPresenter
                                    x:Name="content"
                                    Opacity="1.0"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="Content"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3777" />
                            <Setter TargetName="border" Property="Background" Value="#3fff" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3000" />
                            <Setter TargetName="border" Property="Background" Value="#3777" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="#4fff" />
                            <Setter TargetName="border" Property="Background" Value="#6fff" />
                            <Setter TargetName="content" Property="Opacity" Value="0.9" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ControlStyles-->

    <Style TargetType="{x:Type app:PlaceHolderTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="PlaceHolderForeground" Value="#888" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type app:PlaceHolderTextBox}">
                    <Grid x:Name="back" Background="{TemplateBinding Background}">
                        <Border
                                x:Name="border"
                                ClipToBounds="True"
                                Effect="{StaticResource UIEffectShadow}"
                                BorderBrush="{DynamicResource TextBoxBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" />

                        <Border
                                Margin="2 0"
                                x:Name="PART_PlaceHolder"
                                IsHitTestVisible="False"
                                Visibility="Collapsed">
                            <Label
                                    Foreground="{TemplateBinding PlaceHolderForeground}"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Content="{TemplateBinding PlaceHolder}" />
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal">
                                    <Storyboard Storyboard.TargetName="border">
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                                Duration="{StaticResource zeroTime}" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard Storyboard.TargetName="border">
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                                To=".2" Duration="{StaticResource zeroTime}" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Focused">
                                    <Storyboard Storyboard.TargetName="border">
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
                                                To=".1" Duration="{StaticResource zeroTime}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPlaceHolderShown" Value="true">
                            <Setter TargetName="PART_PlaceHolder" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>

                        <Trigger Property="BorderThickness" Value="0">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource emptyShadow}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderBrush}" />
                            <Setter TargetName="back" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource TabItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource TabItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TabItemBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border 
                            x:Name="border"
                            Padding="12 6"
                            BorderThickness="1 1 1 1"
                            Margin="0 0 -1 0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter ContentSource="Header" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TabItemHoverBackground}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="border" Property="BorderThickness" Value="1 1 1 0" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TabItemSelectedBackground}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource TabItemSelectedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TabStripPlacement" Value="Top" />
        <Setter Property="Background" Value="{DynamicResource TabControlBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TabControlBorderBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel Background="{TemplateBinding Background}">
                        <Grid DockPanel.Dock="Top">
                            <Border
                                    BorderThickness="0 0 0 1"
                                    Background="#2000"
                                    BorderBrush="{TemplateBinding BorderBrush}" />

                            <TabPanel
                                    x:Name="HeaderPanel"
                                    Margin="4 4 4 0"
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1"
                                    Background="{x:Static Brushes.Transparent}" />
                        </Grid>

                        <Border
                                Background="{TemplateBinding Background}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2">
                            <ContentPresenter 
                                    Margin="0"
                                    x:Name="PART_SelectedContentHost" 
                                    ContentSource="SelectedContent"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
    </Style>

    <!--#endregion-->

    <Style x:Key="NoHeaderTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectedIndex" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Thickness x:Key="BottomThickness" Bottom="1" />

    <ItemContainerTemplate x:Key="ItemsContainerStyle">
        <VirtualizingStackPanel />
    </ItemContainerTemplate>

    <Style x:Key="ToolBarBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource ToolBarBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource BottomThickness}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource ToolBarForeground}" />
    </Style>

    <Style x:Key="BoxItemBase" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Padding" Value="0" />
        <!--<Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="BorderBrush" Value="#f0f0f0" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#f4f4f4" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#ccc" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#efefef" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#aaa" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource BoxItemBase}">
        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}}}" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BoxItemBase}">
        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}}}" />
    </Style>

    <Style TargetType="{x:Type app:ListBoxItemEx}" BasedOn="{StaticResource BoxItemBase}">
        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}}}" />
    </Style>

    <!--<Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource BoxItemBase}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4 2" />
    </Style>-->

    <Style x:Key="ToolBarStyle" TargetType="{x:Type ToolBar}" BasedOn="{StaticResource {x:Type ToolBar}}">
        <Setter Property="Background" Value="{DynamicResource ToolBarBackground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BottomThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarForeground}" />
    </Style>

</ResourceDictionary>