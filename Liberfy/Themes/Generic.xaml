<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Liberfy"
	xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

	<SolidColorBrush x:Key="ToolBarForeground" Color="#444" />
	<SolidColorBrush x:Key="ToolBarBorderBrush" Color="#DADADA" />
	<SolidColorBrush x:Key="ToolBarBackground" Color="#F8F8F8" />

	<SolidColorBrush x:Key="SettingTabPanelBackground" Color="#FFECECEC" />
	<SolidColorBrush x:Key="SettingTabItemForeground" Color="#444" />
	<SolidColorBrush x:Key="SettingTabItemNormalBorderBrush" Color="#BBB" />
	<SolidColorBrush x:Key="SettingTabItemSelectedBorderBrush" Color="#DDD" />

	<Color x:Key="AccentColor">#07c</Color>

	<SolidColorBrush x:Key="DisabledForeground" Color="#666" />

	<SolidColorBrush x:Key="TextBoxBorderBrush" Color="#CCC" />
	<SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="#AAA" />
	<SolidColorBrush x:Key="TextBoxDisabledBackground" Color="#FCFCFC" />
	<SolidColorBrush x:Key="TextBoxDisabledForeground" Color="#666" />

	<!--#region UI Styles-->

	<DropShadowEffect
		x:Shared="False"
		x:Key="UIEffectShadow"
		ShadowDepth="1" BlurRadius="3"
		Opacity=".1" Direction="270"
		Color="#666" />

	<Duration x:Key="UIAnimationSpeed">0:0:0.2</Duration>

	<Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator
						VerticalAlignment="{TemplateBinding VerticalAlignment}"
						Background="Transparent">
						<BulletDecorator.Bullet>
							<Border
								x:Name="back"
								Width="14" Height="14"
								Background="{x:Static Brushes.White}">

								<Grid>
									<Border
										x:Name="border"
										ClipToBounds="True"
										IsHitTestVisible="False"
										BorderBrush="#CCC"
										Effect="{StaticResource UIEffectShadow}"
										BorderThickness="1" />

									<Path
										x:Name="CheckMark"
										Visibility="Collapsed"
										Width="10" Height="10"
										SnapsToDevicePixels="False"
										StrokeThickness="2"
										Data="M 1,5 L 4,8 L 9,1">
										<Path.Stroke>
											<SolidColorBrush Color="{StaticResource AccentColor}" />
										</Path.Stroke>
									</Path>

									<Rectangle
										x:Name="IndeterminateMark"
										Visibility="Collapsed"
										Width="10" Height="10"
										SnapsToDevicePixels="False">
										<Rectangle.Fill>
											<SolidColorBrush Color="{StaticResource AccentColor}" />
										</Rectangle.Fill>
									</Rectangle>
								</Grid>

							</Border>
						</BulletDecorator.Bullet>

						<ContentPresenter
							x:Name="content"
							Margin="4, 0, 0, 0"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							RecognizesAccessKey="True"
							TextBlock.Foreground="{TemplateBinding Foreground}"/>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard Storyboard.TargetName="border">
										<ColorAnimation
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
											To="#AAA" Duration="{StaticResource UIAnimationSpeed}" />
										<DoubleAnimation
											Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
											To=".1" Duration="{StaticResource UIAnimationSpeed}" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MouseOver">
									<Storyboard Storyboard.TargetName="border">
										<ColorAnimation
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
											To="#888" Duration="{StaticResource UIAnimationSpeed}" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard Storyboard.TargetName="border">
										<ColorAnimation
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
											To="{StaticResource AccentColor}"
											Duration="{StaticResource UIAnimationSpeed}" />
										<DoubleAnimation
											Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
											To=".3" Duration="{StaticResource UIAnimationSpeed}" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard Storyboard.TargetName="border">
										<ColorAnimation
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
											To="#BBB" Duration="{StaticResource UIAnimationSpeed}" />
										<ColorAnimation
											Storyboard.TargetName="back"
											Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											To="#F8F8F8" Duration="{StaticResource UIAnimationSpeed}" />
										<ColorAnimation
											Storyboard.TargetName="CheckMark"
											Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)"
											To="#AAA" Duration="{StaticResource UIAnimationSpeed}" />
										<ColorAnimation
											Storyboard.TargetName="IndeterminateMark"
											Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
											To="#AAA" Duration="{StaticResource UIAnimationSpeed}" />
										<DoubleAnimation
											Storyboard.TargetProperty="Effect.(DropShadowEffect.Opacity)"
											To=".0" Duration="{StaticResource UIAnimationSpeed}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ColorAnimation
											Storyboard.TargetName="border"
											Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
											To="{StaticResource AccentColor}"
											Duration="{StaticResource UIAnimationSpeed}" />
										<DoubleAnimation
											Storyboard.TargetName="border"
											Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)"
											To=".2" Duration="{StaticResource UIAnimationSpeed}" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<Storyboard>
										<DoubleAnimation
										Storyboard.TargetName="border"
										Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)"
										To=".1" Duration="{StaticResource UIAnimationSpeed}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
						</Trigger>

						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="IndeterminateMark" Property="Visibility" Value="Visible" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource DisabledForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid
						x:Name="border"
						Margin="2"
						Background="#12888888">
						<Path 
							x:Name="arrow"
							Fill="#F444"
							VerticalAlignment="Bottom"
							Margin="2.5 4 2 4"
							Data="M-0.5,0 L6,0 L6,1 L-0.5,1  M-0.5,3 L5.5,3 L2.5,6 Z" />
						<ContentPresenter />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="#30888888" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Background" Value="#60888888" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="#FF888888" />
							<Setter TargetName="arrow" Property="Fill" Value="#FFFF" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Cursor" Value="SizeAll" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle
						Margin="0 2">
						<Rectangle.Fill>
							<DrawingBrush
								TileMode="Tile"
								Viewport="0 0 4 4"
								Viewbox=" 0 0 8 8"
								ViewportUnits="Absolute"
								ViewboxUnits="Absolute">
								<DrawingBrush.Drawing>
									<DrawingGroup>
										<GeometryDrawing
											Brush="#AAA"
											Geometry="M4,4 L4,8 L8,8 L8,4 Z" />
									</DrawingGroup>
								</DrawingBrush.Drawing>
							</DrawingBrush>
						</Rectangle.Fill>
					</Rectangle>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}" />
		<Setter Property="Foreground" Value="{x:Static Brushes.Transparent}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<DockPanel>
							<ToggleButton
								DockPanel.Dock="Right"
								IsEnabled="{TemplateBinding HasOverflowItems}"
								ClickMode="Press"
								Style="{StaticResource ToolBarOverflowButtonStyle}"
								IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								<Popup
									x:Name="OverflowPopup"
									AllowsTransparency="True"
									Placement="Bottom"
									StaysOpen="False"
									Focusable="False"
									PopupAnimation="None"
									IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
									<theme:SystemDropShadowChrome
										x:Name="shadow"
										Margin="0 0 5 5" Color="#71000000">
										<Border
											x:Name="DropDownBorder"
											BorderThickness="1"
											Background="#FFF"
											BorderBrush="#666">
											<ToolBarOverflowPanel
												x:Name="PART_ToolBarOverflowPanel"
												Margin="2"
												WrapWidth="200"
												Focusable="True"
												FocusVisualStyle="{x:Null}"
												KeyboardNavigation.TabNavigation="Cycle"
												KeyboardNavigation.DirectionalNavigation="Cycle" />
										</Border>
									</theme:SystemDropShadowChrome>
								</Popup>
							</ToggleButton>

							<Thumb
								x:Name="ToolBarThumb"
								Style="{StaticResource ToolBarThumbStyle}"
								Width="10" />

							<ToolBarPanel
								x:Name="PART_ToolBarPanel"
								IsItemsHost="True" />
						</DockPanel>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="True">
							<Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="True">
							<Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="#000" />
		<Setter Property="Padding" Value="8 4" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border 
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"/>

						<Border
							x:Name="border"
							Margin="{TemplateBinding BorderThickness}"
							Background="#0000"
							Padding="{TemplateBinding Padding}">
							<ContentPresenter
								x:Name="content"
								Content="{TemplateBinding Content}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"/>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="#1000" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Background" Value="#2000" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="#08000000" />
							<Setter TargetName="content" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="#000" />
		<Setter Property="Padding" Value="8 4" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Border 
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"/>

						<Border
							x:Name="border"
							Margin="{TemplateBinding BorderThickness}"
							Background="#0000"
							Padding="{TemplateBinding Padding}">
							<ContentPresenter
								x:Name="content"
								Content="{TemplateBinding Content}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"/>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="#0D000000" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Background" Value="#2000" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="#18000000" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="border" Property="Background" Value="#3000" />
						</MultiTrigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="#0000" />
							<Setter TargetName="content" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}"
		   BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" />

	<Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}"
		   BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" />

	<Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Background" Value="#CCC" />
		<Setter Property="Width" Value="1" />
		<Setter Property="Margin" Value="3 4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Rectangle Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!--#endregion-->

</ResourceDictionary>